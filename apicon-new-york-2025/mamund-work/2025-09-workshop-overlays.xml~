<presentation xmlns="http://dret.net/xmlns/hotspot/1" id="openapi-overlays">
  <title>Adapting OpenAPI Documents with Overlays</title>
  <part id="overlys-introduction">
    <title>Introduction</title>
    <slide id="overview">
      <title>Overview</title>
      <a href="https://spec.openapis.org/overlay/v1.0.0.html">
        <img src="mamund-overlay-specs.png" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; filter: drop-shadow(0px 0px 10px rgba(0,0,0,0.6)) ; " />  
      </a>
      <ul>
        <li>Why Overlays?</li>
        <li>How Overlays Work</li>
        <li>Overlay Examples</li>
        <li>Common Uses</li>
        <li>Exercise</li>
        <li>Review</li>
      </ul>
    </slide>
    <slide id="why-overlays">
      <title>Why Overlays?</title>
      <ul>
        <li>Different audiences need different specs: internal, partner, public</li>
        <li>Forking creates maintenance burden and version drift</li>
        <li>Overlays = modify without duplicating</li>
        <li>Think composability and reuse for API contracts</li>
      </ul>
    </slide>
    <slide id="real-world-examples">
      <title>Real-World Examples</title>
      <ul>
        <li>Redact internal ops for partner docs</li>
        <li>Add beta endpoints without polluting GA spec</li>
        <li>Remove internal-only fields for mock generation</li>
        <li>Translate descriptions for international teams</li>
      </ul>
    </slide>
  </part>
  <part id="how-overlays-work">
    <title>How Overlays Work</title>
    <slide id="what-is-an-overlay">
      <title>What Is an Overlay?</title>
      <img src="mamund-overlay-description-code.png" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; filter: drop-shadow(0px 0px 10px rgba(0,0,0,0.6)) ; " />
      <ul>
        <li>A declarative patch applied to an OpenAPI document</li>
        <li>You define the changes, tooling applies them</li>
        <li>Output: customized OpenAPI spec for a specific context</li>
        <li>Based on OpenAPI Initiative's <a href="https://spec.openapis.org/overlay/v1.0.0.html">Overlay Specification</a></li>
      </ul>
    </slide>
    <slide id="anatomy-of-an-overlay">
      <title>Anatomy of an Overlay</title>
      <img src="mamund-overlay-description-code.png" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; filter: drop-shadow(0px 0px 10px rgba(0,0,0,0.6)) ; " />
      <ul>
        <li>Keys: <code>target</code>, <code>action</code>, <code>value</code></li>
        <li>Actions: <code>add</code>, <code>remove</code>, <code>update</code></li>
        <li>Targets are <a href="https://www.rfc-editor.org/rfc/rfc9535.html">JSONPath</a> (RFC9535) references into base spec: <code>$.info.description</code></li>
        <li>Output = transformed external version, not an inline mutation</li>
      </ul>
    </slide>
    <slide id="overlay-vs-fork">
      <title>Overlay vs Fork</title>
      <ul>
        <li>Forking duplicates effort and increases drift</li>
        <li>Overlays isolate change and encourage reuse</li>
        <li>Keeps base spec authoritative and maintainable</li>
        <li>Great for automation and clarity</li>
      </ul>
    </slide>
    <slide id="overlay-actions">
      <title>Overlay Actions</title>
      <ul>
        <li><code>add</code>: insert new data</li>
        <li><code>update</code>: change existing value</li>
        <li><code>remove</code>: delete fields or sections</li>
        <li>Focus on small, targeted overlays — easier to debug</li>
      </ul>
    </slide>
  </part>
  <part id="overlay-examples">
    <title>Overlay Examples</title>
    <slide id="base-spec-example-get-pets">
      <title>Base Spec Example – Task Management</title>
      <img src="mamund-overlay-openapi-screen.png" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; filter: drop-shadow(0px 0px 10px rgba(0,0,0,0.6)) ; " />

      <ul>
        <li>Update the API description</li>
        <li>Summary, description, tags, response schema</li>
        <li>This will be modified by overlays in the next slides</li>
        <li>Used for mock/demo/test generation</li>
      </ul>
    </slide>
    <slide id="example-updeate-description">
      <title>Example – Update Description</title>
      <ul>
        <li>Target: <code>$.info.description</code></li>
        <li>Action: <code>update</code>: &quot;...&quot;</li>
        <li>Clean way to update messaging without rewriting the spec</li>
        <li>Useful for audience-specific tone and language</li>
      </ul>
    </slide>
    <slide id="example=update-description-code">
      <title>Example – Update Description</title>
      <img src="mamund-overlay-description-code.png" />
    </slide>
    <slide id="example-update-description-screen">
      <title>Example – Update Description</title>
      <img src="mamund-overlay-description-screen.png" />
    </slide>
    <slide id="example-remove-operation">
      <title>Example – Remove Operation</title>
      <ul>
        <li>Target: <code>$.paths['/doAssignUserToTask']</code></li>
        <li>Action: <code>remove: true</code></li>
        <li>Removes assignment operation from external docs</li>
        <li>Use before publishing to external consumers</li>
      </ul>
    </slide>
    <slide id="example-remove-operation-code">
      <title>Example – Remove Operation</title>
      <img src="mamund-overlay-remove-code.png" />
    </slide>
    <slide id="example-remove-operation-screen">
      <title>Example – Remove Operation</title>
      <img src="mamund-overlay-remove-screen.png" />
    </slide>
    <slide id="example-update-schema-fields">
      <title>Example – Update Schema Fields</title>
      <ul>
        <li>Target: <code>$.components.schemas.Title.example</code></li>
        <li>Action: <code>update</code>: &quot;Work to do&quot;</li>
        <li>Fine-grained control of docs, schema, or examples</li>
        <li>Localized or clarified description overrides</li>
      </ul>
    </slide>
    <slide id="example-update-schema-fields-code">
      <title>Example – Update Schema Fields</title>
      <img src="mamund-overlay-properties-code.png" />
    </slide>
    <slide id="example-update-schema-fields-screen">
      <title>Example – Update Schema Fields</title>
      <img src="mamund-overlay-properties-screen.png" />
    </slide>
  </part>
  <part id="common-uses">
    <title>Common Uses</title>
    <slide id="use-cases-at-a-glance">
      <title>Use Cases at a Glance</title>
      <ul>
        <li>Internal vs external profiles</li>
        <li>Beta vs GA feature overlays</li>
        <li>Region-specific or language-specific docs</li>
        <li>Security redaction for mock/test users</li>
      </ul>
    </slide>
    <slide id="overlay-directory-patterns">
      <title>Overlay Directory Patterns</title>
      <ul>
        <li><code>overlays/internal.yaml</code>, <code>overlays/partner.yaml</code>, etc.</li>
        <li>Order matters when applying overlays!</li>
        <li>Helps clarify intent and audience for each patch</li>
        <li>Enables portable, layered API bundles</li>
      </ul>
    </slide>
    <slide id="ci-cd-integration">
      <title>CI/CD Integration</title>
      <ul>
        <li>Apply overlays during build or deploy</li>
        <li>Automate audience-specific doc builds</li>
        <li>Can support GitOps-style preview/staging flows</li>
        <li>Avoids duplication across environments</li>
      </ul>
    </slide>
    <slide id="testing-and-mocking">
      <title>Testing and Mocking</title>
      <ul>
        <li>Use overlays to generate testable variants</li>
        <li>Tailored mocks: remove auth headers, hide internals</li>
        <li>Great for contract testing and demos</li>
        <li>Supports partial feature rollout</li>
      </ul>
    </slide>
  </part>
  <part id="overlays-exercise">
    <title>Exercise</title>
    <slide id="">
      <title>Create a Task Search Overlay</title>
      <img src="mamund-overlay-exercise-screen.png" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; filter: drop-shadow(0px 0px 10px rgba(0,0,0,0.6)) ; " />
      <ul>
        <li>Identify endpoints for searching tasks</li>
        <li>Create an overlay that removes all other endpoints</li>
        <li>Apply the overlay to generate results</li>
      </ul>
      <ul>
        <li><a href="https://overlay.speakeasy.com/">OpenAPI Overlay Playground</a></li>
        <li><a href="https://bump.sh/">Bump.sh</a></li>
      </ul>  
    </slide>
  </part>
  <part id="overlay-review">
    <title>Review</title>
    <slide id="caveats-and-challenges">
      <title>Caveats and Challenges</title>
      <ul>
        <li>Targets may break if base spec structure changes</li>
        <li>Overlays can become brittle if overused</li>
        <li>Limited tooling compared to full OpenAPI</li>
        <li>Requires discipline in base spec maintenance</li>
      </ul>
    </slide>
    <slide id="best-practices">
      <title>Best Practices</title>
      <ul>
        <li>Keep overlays small and scoped</li>
        <li>Name overlays clearly (<code>redact.yaml</code>, <code>fr.yaml</code>, etc.)</li>
        <li>Document intent of each overlay</li>
        <li>Validate before applying</li>
      </ul>
    </slide>
    <slide id="summary">
      <title>Summary</title>
      <ul>
        <li>Overlays = composable, declarative OpenAPI deltas</li>
        <li>Solve the "spec reuse" problem without forks</li>
        <li>Ideal for multi-team, multi-stage, multi-audience APIs</li>
        <li>Backed by OpenAPI community standards</li>
      </ul>
    </slide>
    <slide id="resources">
      <title>Resources</title>
      <img src="mamund-overlay-specs.png" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; filter: drop-shadow(0px 0px 10px rgba(0,0,0,0.6)) ; " />
      <ul>
        <li><a href="https://spec.openapis.org/overlay/v1.0.0.html">OAI Overlay Specification</a> </li>
        <li><a href="https://www.rfc-editor.org/rfc/rfc9535.html">JSONPath</a> (RFC9535)</li>
        <li><a href="https://overlay.speakeasy.com/">OpenAPI Overlay Playground</a></li>
        <li><a href="https://bump.sh/">Bump.sh</a></li>
      </ul>
    </slide>
    <slide id="overlay-questions">
      <title>Questions?</title>
      <img 
          src="mamund-questions.png" 
          title="Questions"
          class="fullsize"/>
    </slide>
  </part>
</presentation>
