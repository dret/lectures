<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="innoq" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="techday.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="https://creativecommons.org/licenses/by/4.0/" short="CC BY 4.0">
		<div class="license">
			<p><a rel="license" title="View full text of license" href="https://creativecommons.org/licenses/by/4.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/youtube/logo/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="View full text of license" href="https://creativecommons.org/licenses/by/4.0/">This work is licensed under a CC<br/>Attribution 4.0 International License</a></p>
		</div>
	</license>
	<title><a href="https://technologyday.innoq.com/">INNOQ Technology Day 2024</a></title>
	<author>Erik Wilde</author>
	<affiliation>Principal Consultant, <a href="https://www.innoq.com/">INNOQ</a></affiliation>
	<date short="2024-12-05">December 5, 2024</date>
	<copyright>2024 Erik Wilde</copyright>
	<presentation id="index">
		<title short="What Why When Versioning Matters">What Why When Versioning Matters: Tips for API Design, Description, and Documentation</title>
		<toc class="abstract">One of the superpowers of APIs is to design them as products with a focus on making them reusable. That helps with innovation and reuse, as teams can now consume the capabilities of other teams without having to coordinate with them, leading to faster flow. For this to work well, API versioning must be handled in a way that allows the API to evolve while at the same time not breaking existing consumers. What do you have to version? Why does it matter? When should you version? We present tips that help to improve your API design, description and documentation practices.</toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract">
				<toc class="abstract"/>
			</p>
		</slide>
		<part id="why">
			<title>Why Versioning?</title>
			<slide id="composition">
				<title>Systems vs. Ecosystems</title>
				<ul>
					<li>Software engineering today oftentimes includes using <em>external</em> components</li>
					<li>Building <em>systems</em> implies control over the interconnected components</li>
					<ul>
						<li><em>Change radius</em> is the entire system and changes can be coordinated</li>
					</ul>
					<li>Building <em>ecosystems</em> implies that control is decentralized and uncoordinated</li>
					<ul>
						<li><em>Change radius</em> are components and changes must be absorbed by the design</li>
					</ul>
				</ul>
			</slide>
			<slide id="programming-in-the-huge">
				<title>Programming-in-the-Huge</title>
				<img source='Frank DeRemer and Hans Kron, "Programming-in-the-Large versus Programming-in-the-Small", ACM SIGPLAN Notices, Volume 10, Issue 6, Pages 114-121, April 1975' src="programming-in-the-large.png" href="https://dl.acm.org/doi/10.1145/390016.808431" class="fullsize-shadow" />
			</slide>
			<slide id="api-interfaces">
				<title>APIs as Component Interfaces</title>
				<ul>
					<li><em>Private APIs</em> are used within organizations</li>
					<ul>
						<li>Some APIs may be internal to <em>building systems</em></li>
						<li>Organizations typically are <em>ecosystems</em> of various individual systems</li>
					</ul>
					<li><em>Partner APIs</em></li>
					<ul>
						<li>Established and managed relationships but local autonomy</li>
					</ul>
					<li><em>Public APIs</em></li>
					<ul>
						<li>Large-scale relationships with little mutual coordination</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="what">
			<title>What to do for Versioning?</title>
			<slide id="loose-coupling">
				<title>Loose Coupling</title>
				<ul>
					<li><em>Coupling</em> always is a trade-off</li>
					<li><em>Tight coupling</em> allows for runtime optimizations</li>
					<li><em>Loose coupling</em> makes it easier to change things at a local level</li>
					<li><em>Decentralized scenarios</em> are a good candidate for loose coupling</li>
					<li>Changing things without breaking things is what we're all after</li>
				</ul>
			</slide>
			<slide id="compatibility-directions">
				<title>Backward and Forward Compatibility</title>
				<img src="compatibility.png" class="fullsize" />
			</slide>
			<slide id="backward-compatibility">
				<title>Backward Compatibility</title>
				<blockquote><q>Backward compatibility is a property of a [...] technology that allows for interoperability with an older legacy system, or with input designed for such a system.</q> (<a href="https://en.wikipedia.org/wiki/Backward_compatibility">Wikipedia</a>)</blockquote>
				<blockquote><q>Backward compatibility is a property of an API consumer that allows for interoperability with an older API version.</q> (<q><a href="https://en.wikipedia.org/wiki/Backward_compatibility">Wikipedia</a></q>)</blockquote>
			</slide>
			<slide id="forward-compatibility">
				<title>Forward Compatibility</title>
				<blockquote><q>Forward compatibility [...] is a design characteristic that allows a system to accept input intended for a later version of itself. [...] A standard supports forward compatibility if a product that complies with earlier versions can <q>gracefully</q> process input designed for later versions of the standard, ignoring new parts which it does not understand.</q> (<a href="https://en.wikipedia.org/wiki/Forward_compatibility">Wikipedia</a>)</blockquote>
				<blockquote><q>Forward compatibility allows a system to process data intended for a later version of itself. An API supports forward compatibility if a consumer that complies with earlier versions can gracefully process data designed for later versions of the API.</q> (<q><a href="https://en.wikipedia.org/wiki/Forward_compatibility">Wikipedia</a></q>)</blockquote>
			</slide>
			<slide id="dont-dont-version">
				<title>Don't Don't Version</title>
				<ul>
					<li><q>Never changing anything</q> is not a great product management attitude</li>
					<li>Changes ideally are non-breaking but still are relevant to consumers</li>
					<li>Give consumers as much freedom as possible to ignore changes</li>
					<li>Give consumers clear avenues to see and explore changes</li>
				</ul>
			</slide>
			<slide id="hyrums-law">
				<title>Hyrum's Law: Every Change is a Breaking Change</title>
				<div style=" float : left ; width : 65% ; object-fit : contain ; margin : 0% 2% 4% 4% ; ">
					<div style=" width: 100% ; height: 60% ; position: relative ; padding-bottom: 56.25% ; ">
						<iframe style=" border: 0 ; top: 0 ; left: 0 ; width: 100% ; height: 100% ; position: absolute; " src="https://www.youtube-nocookie.com/embed/5Wdgjw6IGDM" allowfullscreen="no" scrolling="no" allow="encrypted-media; accelerometer; gyroscope; picture-in-picture"/>
					</div>
				</div>
			</slide>
		</part>
		<part id="how">
			<title>How to support Versioning?</title>
		</part>
		<part id="api-descriptions">
			<title>APIs and API Descriptions</title>
			<slide id="api-descriptions-market">
				<title>Finding and Addressing a Market</title>
				<img src="api-descriptions-1.png" class="fullsize" />
			</slide>
			<slide id="api-descriptions-describing">
				<title>Describing the Product</title>
				<img src="api-descriptions-2.png" class="fullsize" />
			</slide>
			<slide id="api-descriptions-standards">
				<title>Using Standardized Description Languages</title>
				<img src="api-descriptions-3.png" class="fullsize" />
			</slide>
			<slide id="api-descriptions-implementation">
				<title>Creating the Product</title>
				<img src="api-descriptions-4.png" class="fullsize" />
			</slide>
			<slide id="api-descriptions-language">
				<title>Understanding the Standard</title>
				<img src="api-descriptions-5.png" class="fullsize" />
			</slide>
			<slide id="api-descriptions-description">
				<title>Finding and Consuming Descriptions</title>
				<img src="api-descriptions-6.png" class="fullsize" />
			</slide>
			<slide id="api-descriptions-consumption">
				<title>Consuming Described Products</title>
				<img src="api-descriptions-7.png" class="fullsize" />
			</slide>
		</part>
		<part id="version-info">
			<title>Where to put Version Information</title>
			<slide id="identity-matters">
				<title>Identity Matters</title>
				<ul>
					<li>URIs are about resource identity</li>
					<ul>
						<li>Representations are handled through HTTP and media types</li>
					</ul>
					<li>Various choices when it comes to versioned names</li>
					<ul>
						<li><em>DNS: <code>https://v1.api.example.com/</code></em></li>
						<li><em>URI root:</em> <code>https://api.example.com/v1/</code></li>
						<li><em>Query parameter:</em> <code>https://api.example.com/?version=1.0</code></li>
						<li><em>HTTP header field:</em> <code>https://api.example.com/</code></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="thanks">
				<title>Thank You!</title>
				<img src="end.jpg" title="This is the End" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; filter: drop-shadow(0px 0px 10px rgba(0,0,0,0.6)) ; "/>
				<ul>
					<li><a href="https://www.youtube.com/ErikWilde"><img src="youtube-logo.png" style=" height : 1em ; "/> <code>youtube.com/ErikWilde</code></a></li>
					<li><a href="https://www.linkedin.com/in/erikwilde"><img src="linkedin-logo.png" style=" height : 1em ; "/> <code>linkedin.com/in/erikwilde</code></a></li>
					<!-- <li>Slides online: <a href="http://dret.net/lectures/innoq-technology-day/"><code>dret.net/lectures/innoq-technology-day-2024/</code></a></li> -->
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>